/* Site styles go here */
main {
  font-family: 'GT America';
  margin: 0 auto;
  max-width: 900px;
  padding: 0 $space-xs;
}

html,
body,
ul,
li,
h1,
h2,
h3,
h4,
p {
  line-height: 1.25;
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit;
}

.main-header {
  margin: $space-base auto;
  text-align: center;

  pre {
    color: $mid-gray;
    font-family: 'GTAmericaMono-Light';
  }
}

.sub-header {
  margin: $space-base auto $space-base 0;
  max-width: 600px;

  h2 {
    position: relative;

    &::before {
      content: url(../img/right-arrow.svg);
      // Confusing: absolutely positioned elements are placed
      // relateively to the 0, 0 coord. (top left) of their nearest non-statically positioned parent.
      // That's why the h2 that conatins this ::before has position: relative.
      position: absolute;
      left: -1em;
      top: -0.065em;
    }
  }

  p {
    color: $mid-gray;
    font-weight: 300;
    margin-top: 0.5em;
  }
}

h1,
h2,
h4 {
  @include heading(1);

  &.light-heading {
    font-weight: 300;
  }
}

h3 {
  @include heading(5, $color: $white, $fluid: false);
  background-color: $rich-black;
  font-family: 'GTAmericaMono-Regular';
  padding: 2px 4px 3px;
}

h4 {
  @include transition;
  border-bottom: 1px solid $light-gray;
  cursor: pointer; // cursor, contrary to expectation, does not need to be set on :hover
  position: relative;

  // shorthand for focus, hover, active, and focus-within states
  @include on-focus {
    background-color: $cyan;
    color: $black;
  }

  &::after {
    content: url(../img/right-arrow.svg);
    position: absolute;
    right: 10px;
    top: $space-sm;
  }

  a {
    box-sizing: border-box;
    display: inline-block;
    padding: $space-sm 5px ($space-sm + 3px); // set padding on the anchor element to ensure the visually implied click area is accurate
    width: 100%;

    @include on-focus {
      outline: none;
    }
  }
}

.lesson-list {
  display: flex;
  flex-direction: column;
  margin-bottom: $space-sm;

  @include mq($bp-two-col) {
    flex-direction: row;
  }
}

.lesson-list-item {
  margin-bottom: $space-base;

  @include mq(max, $bp-two-col) {
    // Use a max width media query for adding top borders on mobile becuase
    // the following selector is pretty specific, and we'd have to duplicate
    // it to remove the border later. It's better to leverage the power of mq's to
    // have it only apply exactly when we want it. (This is what max-with mq's are for)
    &:nth-child(n + 2) {
      // everything after the first child: n + 2 will never be less than 2 for n [0, infinity])
      // FYI: the selector "+ .lesson-list-item" would also work just as well here.
      border-top: 1px solid $light-gray;
    }
  }

  @include mq($bp-two-col) {
    &:nth-child(odd) {
      margin-right: $space-sm;
    }

    &:nth-child(even) {
      margin-left: $space-sm;
    }
  }
}

.lesson-desc {
  font-weight: 300;

  p,
  ul {
    margin-top: $space-xs;
  }

  ul {
    li {
      &::before {
        content: '\002014';
        display: inline-block;
        margin: 0 0.75em 0 0.25em;
      }

      + li {
        margin-top: 0.5em;
      }
    }
  }
}
